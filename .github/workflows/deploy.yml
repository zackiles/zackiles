name: Build and Deploy to GitHub Pages

on:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  actions: read

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Git LFS
        run: |
          git lfs install
          git lfs pull

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Setup FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3

      - name: Debug Playwright Cache Location
        run: |
          echo "Current user home: $HOME"
          echo "Playwright cache location: $HOME/.cache/ms-playwright"
          ls -la $HOME/.cache || echo "Cache directory does not exist yet"

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('deno.lock') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install Playwright
        run: |
          echo "Installing Playwright browsers..."
          deno task install:playwright
          npx playwright --version
          echo "Installed browsers:"
          find ~/.cache/ms-playwright -type f -name "*shell*" | sort
          echo "Cache directory size:"
          du -sh ~/.cache/ms-playwright

      - name: Build Terminal Animation
        run: deno task build:terminal

      - name: Build GitHub Graph
        run: deno task build:graph
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Verify Generated Files
        run: |
          ls -l index.html graph.png index.gif

      # Configure GitHub Pages with enablement to ensure it's enabled
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true

      # Upload the entire directory as a Pages artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: .

      # Deploy the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
